services:
  kafka:
    image: bitnami/kafka:3.4.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_KRAFT_CLUSTER_ID=s2ZOqbSYSu2GRR15Wn_tiw
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - kafka-net

  producer:
    build:
      context: ./kafka-producer-app
    container_name: kafka-producer
    ports:
      - "8081:8080"
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - APP_KAFKA_TOPIC_NAME=test-topic
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - kafka-net

  consumer:
    build:
      context: ./kafka-consumer-app
    container_name: kafka-consumer
    ports:
      - "8082:8080"
      - "8093:8093"
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - APP_KAFKA_CONSUMER_GROUP_ID=my-group
      - APP_KAFKA_TOPIC_NAME=test-topic
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - kafka-net

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=Password@1
      - MYSQL_DATABASE=employeedb
    networks:
      - kafka-net
    healthcheck:
      test: [ "CMD", "mysqladmin", "-uroot", "-pPassword@1", "ping", "-h", "127.0.0.1" ]
      interval: 10s
      timeout: 5s
      retries: 10


networks:
  kafka-net:
    driver: bridge
